/*
 * This file is generated by jOOQ.
*/
package com.example.pojo.tables.records;


import com.example.pojo.tables.UsersInfor;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersInforRecord extends UpdatableRecordImpl<UsersInforRecord> implements Record4<Integer, String, String, Integer> {

    private static final long serialVersionUID = -859790852;

    /**
     * Setter for <code>exercise_test.users_infor.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>exercise_test.users_infor.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>exercise_test.users_infor.user_name</code>.
     */
    public void setUserName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>exercise_test.users_infor.user_name</code>.
     */
    public String getUserName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>exercise_test.users_infor.sex</code>.
     */
    public void setSex(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>exercise_test.users_infor.sex</code>.
     */
    public String getSex() {
        return (String) get(2);
    }

    /**
     * Setter for <code>exercise_test.users_infor.age</code>.
     */
    public void setAge(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>exercise_test.users_infor.age</code>.
     */
    public Integer getAge() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return UsersInfor.USERS_INFOR.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return UsersInfor.USERS_INFOR.USER_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return UsersInfor.USERS_INFOR.SEX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return UsersInfor.USERS_INFOR.AGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getUserName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getSex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getAge();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getUserName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getSex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getAge();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersInforRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersInforRecord value2(String value) {
        setUserName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersInforRecord value3(String value) {
        setSex(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersInforRecord value4(Integer value) {
        setAge(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersInforRecord values(Integer value1, String value2, String value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersInforRecord
     */
    public UsersInforRecord() {
        super(UsersInfor.USERS_INFOR);
    }

    /**
     * Create a detached, initialised UsersInforRecord
     */
    public UsersInforRecord(Integer id, String userName, String sex, Integer age) {
        super(UsersInfor.USERS_INFOR);

        set(0, id);
        set(1, userName);
        set(2, sex);
        set(3, age);
    }
}
